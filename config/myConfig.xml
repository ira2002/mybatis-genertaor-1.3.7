<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<properties resource="jdbc2.properties" />
	 <context id="springBootDemo" targetRuntime="MyBatis3">
	 	<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
	 	<plugin type="org.mybatis.generator.plugins.userdefined.MybatisCriteriaPlugin" />
	 	<plugin type="org.mybatis.generator.plugins.userdefined.MybatisServicePlugin">
	 		<property name="targetPackage" value="${targetPackage_service}" />
			<property name="implementationPackage" value="${implementationPackage_service}" />
			<property name="targetProject" value="${targetProject}" />
	 	</plugin>
		<jdbcConnection driverClass="${driverName}" connectionURL="${jdbcUrl}" userId="${user}" password="${password}" >
    		<!-- 针对oracle数据库,获取注释信息. mysql需要url拼接或者设置useInformationSchema=true -->
    		<property name="remarksReporting" value="true"/>
		</jdbcConnection>
		<javaModelGenerator targetPackage="${targetPackage_model}" targetProject="${targetProject}"/>
		<sqlMapGenerator targetPackage="${targetPackage_sqlMap}" targetProject="${targetProject}" />
		<javaClientGenerator type="XMLMAPPER" targetPackage="${targetPackage_dao}" targetProject="${targetProject}"/>
		<table tableName="t_user_info" domainObjectName="UserInfo">
			<generatedKey column="id" sqlStatement="SELECT LAST_INSERT_ID()" />
		</table>
	</context>
	
	
	
	<!-- 其他样例配置 -->
	<!-- 可外接入数据库启动jar包
	<classPathEntry location="E：/Program Files/IBM/SQLLIB/java/db2java.zip" /> 或者配置properties属性
	<classPathEntry location="${driverJar}" /> 
	-->
	<!-- v-1.3.7 需严格遵守顺序:
		(property*, plugin*, commentGenerator?, (connectionFactory | jdbcConnection), 
 		javaTypeResolver?, javaModelGenerator, sqlMapGenerator?, javaClientGenerator?, table+) -->
	<context id="MyBatis3_demo" targetRuntime="MyBatis3">
		<!-- 自定义扩展插件位置 -->
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" /><!-- serializable generator -->
		<plugin type="org.mybatis.generator.plugins.MybatisCriteriaPlugin" ><!-- Criteria replace XxxExample(default) -->
			<property name="isAllInOne" value="true"/><!-- where条件合并为一个 -->
			<property name="isExample" value="false"/><!-- 使用criteria插件时是否还依旧生成entityExample类 -->
		</plugin>
		<plugin type="org.mybatis.generator.plugins.MybatisServicePlugin"><!-- service generator -->
			<property name="targetPackage" value="${targetPackage_service}" />
			<property name="implementationPackage" value="${implementationPackage_service}" />
			<property name="targetProject" value="${targetProject}" />
			<property name="enableInsert" value="true" />
			<property name="enableUpdateByExampleSelective" value="true" />
			<property name="enableInsertSelective" value="true" />
			<property name="enableUpdateByPrimaryKey" value="true" />
			<property name="enableDeleteByPrimaryKey" value="true" />
			<property name="enableDeleteByExample" value="true" />
			<property name="enableUpdateByPrimaryKeySelective" value="true" />
			<property name="enableUpdateByExample" value="true" />
		</plugin>
		<!-- 所有文件的注释控制 -->
		<commentGenerator type="org.mybatis.generator.internal.DefaultCommentGenerator" >
			<property name="suppressAllComments" value="true"/><!-- 是否移除所有注释 -->
			<property name="suppressDate" value="true"/><!-- 存在注释时, 是否移除所有注释的时间标签 -->
		</commentGenerator>
		<!-- 必须,数据库配置信息 -->
		<jdbcConnection driverClass="${driverName}" connectionURL="${jdbcUrl}" userId="${user}" password="${password}" />
		<!-- 必须,生成entity(entityExample?)类模型类文件 -->
		<javaModelGenerator targetPackage="${targetPackage_model}" targetProject="${targetProject}"/>
		<!-- 生成sqlmap.xml(mapper.xml)映射文件 -->
		<sqlMapGenerator targetPackage="${targetPackage_sqlMap}" targetProject="${targetProject}"/>
		<!-- 生成Mapper.java(DAO.java)接口文件 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="${targetPackage_dao}" targetProject="${targetProject}"/>
		<!-- more table+ -->
		<table tableName="t_user_info" domainObjectName="User"><generatedKey column="id" sqlStatement="SELECT LAST_INSERT_ID()" /></table>
	</context>
	 
</generatorConfiguration>










  